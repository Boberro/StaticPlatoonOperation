tmf_version[] = {1,0,1}; // DO NOT CHANGE THIS. This is the core version of the template that your mission was started with.
enableDebugConsole = 1; // Allows the logged in admin to use the debug console from the escape page.

// Use a randomized loading image from TMF. Set your own loading image with e.g. overviewPicture = "image.jpg";
overviewPicture = __EVAL(selectRandom ['\x\tmf\addons\common\ui\loadscreens\1.jpg','\x\tmf\addons\common\ui\loadscreens\2.jpg','\x\tmf\addons\common\ui\loadscreens\3.jpg','\x\tmf\addons\common\ui\loadscreens\4.jpg','\x\tmf\addons\common\ui\loadscreens\5.jpg','\x\tmf\addons\common\ui\loadscreens\6.jpg','\x\tmf\addons\common\ui\loadscreens\7.jpg','\x\tmf\addons\common\ui\loadscreens\8.jpg','\x\tmf\addons\common\ui\loadscreens\9.jpg','\x\tmf\addons\common\ui\loadscreens\10.jpg']);

class CfgDebriefingSections {
    class acex_killTracker {
        title = "ACEX Kill Tracker";
        variable = "acex_killTracker_outputText";
    };
};

class CfgDebriefing
{
	class END1
	{
		title = "Mission Completed";
		subtitle = "ALL AI ELIMINATED";
		description = "Good job!";
	};
	class Failed
	{
		title = "Mission Failed";
		subtitle = "";
		description = "";
	};
	class CustomEnding1
	{
		title = "Custom Ending #1";
		subtitle = "";
		description = "*** Explanation for the debriefing page ***";
	};
};

class Extended_PreInit_EventHandlers {
    class dsm {
        init = "call compile preprocessFileLineNumbers 'XEH_preInit.sqf';";
    };
};

class CfgFunctions
{
	class dsm /*dynamic squad mission*/
	{
		class myCategory
		{
			file = "functions";
			class gear {};
			class createRoadBlock {};
			class createGarrison {};
			class missionSettingsDialog {};
			class setup {};
			class createFlare{};
			class getReinforcementLocations {};
			class getViableFactions {};
			class createSquad {};
			class createReinforcements {};
			class setObjective{};
			class createGuardPoint{};
			class createPatrol{};
			class patrol{};
			class createVehicle{};
			class inContact{};
			class onReinforceing{};
			class requestReinforcement{};
			class nearGarrison{};
			class onGarrisonActivated{};
		};
	};
};

class Params {
};

#include "ui_macros.hpp"
class missionSetuipDialog: RscControlsGroup
{
	idd = 2300;
	x = 0.293679 * safezoneW + safezoneX;
	y = 0.246907 * safezoneH + safezoneY;
	w = 0.412642 * safezoneW;
	h = 0.374138 * safezoneH;
	onLoad="['onLoad', _this] call dsm_fnc_missionSettingsDialog;";
	class Controls
	{
		class dialogBackground: IGUIBack
		{
			idc = 2200;
			x = 0 * safezoneW;
			y = 0 * safezoneH;
			w = 0.412642 * safezoneW;
			h = 0.374138 * safezoneH;
			colorBackground[] = {0.212,0.212,0.212,1};
		};
		class dialogHeader: IGUIBack
		{
			idc = 2220;
			x = 0 * safezoneW;
			y = 0 * safezoneH;
			w = 0.412642 * safezoneW;
			h = 0.015 * safezoneH;
			colorBackground[] = {0.169,0.89,0.494,1};
		};
		class dialogFrame: RscFrame
		{
			idc = 1800;
			x = 0 * safezoneW;
			y = 0 * safezoneH;
			w = 0.412642 * safezoneW;
			h = 0.374138 * safezoneH;
			color[] = {1,1,1,0.3};
		};
		class playerFactionLabel: RscText
		{
			idc = 1000;
			text = "Player faction"; //--- ToDo: Localize;
			x = 0.005 * safezoneW;
			y = 0.022 * safezoneH;
			w = 0.2 * safezoneW;
			h = 0.02 * safezoneH;
		};
		class playerFactionCombo: RscCombo
		{
			idc = 2100;
			x = 0.01 * safezoneW;
			y = 0.044 * safezoneH;
			w = 0.2 * safezoneW;
			h = 0.02 * safezoneH;
		};
		class enemyFactionLabel: RscText
		{
			idc = 1001;
			text = "Enemy faction"; //--- ToDo: Localize;
			x = 0.005 * safezoneW;
			y = 0.066 * safezoneH;
			w = 0.2 * safezoneW;
			h = 0.02 * safezoneH;
		};
		class enemyFactionCombo: RscCombo
		{
			idc = 2101;
			x = 0.01 * safezoneW;
			y = 0.088 * safezoneH;
			w = 0.2 * safezoneW;
			h = 0.02 * safezoneH;
		};
		class ratioSlider: RscCombo
		{
			idc = 1900;
			x = 0.01 * safezoneW;
			y = 0.132 * safezoneH;
			w = 0.2 * safezoneW;
			h = 0.02 * safezoneH;
		};
		class ratioLabel: RscText
		{
			idc = 1002;
			text = "AI Ratio"; //--- ToDo: Localize;
			x = 0.005 * safezoneW;
			y = 0.11 * safezoneH;
			w = 0.2 * safezoneW;
			h = 0.02 * safezoneH;
		};
		class vehicleFactionLabel: RscText
		{
			idc = 1003;
			text = "Enemies use vehicles from faction"; //--- ToDo: Localize;
			x = 0.005 * safezoneW;
			y = 0.154 * safezoneH;
			w = 0.2 * safezoneW;
			h = 0.02 * safezoneH;
		}
		class vehicleFactionCombo: RscCombo
		{
			idc = 2003;
			x = 0.01 * safezoneW;
			y = 0.176 * safezoneH;
			w = 0.2 * safezoneW;
			h = 0.02 * safezoneH;
		};
		class aoMAP: RscMapControl
		{
			idc = 1801;
			x = 0.225 * safezoneW;
			y = 0.046219 * safezoneH;
			w = 0.185 * safezoneW;
			h = 0.27 * safezoneH;
		};
		class goButton: RscButton
		{
			idc = 1600;
			text = "Go"; //--- ToDo: Localize;
			x = 0.34043 * safezoneW;
			y = 0.330121 * safezoneH;
			w = 0.0618964 * safezoneW;
			h = 0.035 * safezoneH;
			colorBackground[] = {0.169,0.89,0.494,1};
			color[] = {1,1,1,1};
			onButtonClick="['done', _this] call dsm_fnc_missionSettingsDialog;";
		};
	};
};

class SPO_PatrolStateMachine {
	list = "dsm_patrol_groups select {({alive _x} count (units _x)) > 0}";
	skipNull = 1;
	class Initial {
        onState = "";
        onStateEntered = "";
        onStateLeaving = "";

		class OnContact {
			targetState = "Combat";
			condition = "dsm_fnc_inContact";
		}
		class ReinforcementRequestRecived {
			targetState = "Reinforceing";
			condition = "!isNull (_this getVariable ['dsm_reinforceing', grpNull])";
		}
	};

	class Reinforceing {
		onStateEntered = "dsm_fnc_onReinforceing";
		class SearchCompletedNoTargets {
			targetState = "Initial";
			// if finished searching and no contacts, go back to normal
			condition = "isNull (_this getVariable ['dsm_reinforceing', grpNull]) && !(_this call dsm_fnc_inContact)";
		}
		class SearchCompleted {
			targetState = "Initial"; // add SearchAndDestory
			// if finished SAD waypoint and have targets.
			condition = "isNull (_this getVariable ['dsm_reinforceing', grpNull]) && (_this call dsm_fnc_inContact)";
		}
	}

	class SearchAndDestory {
        onStateEntered = "";
	}

	class Combat {
        onStateEntered = "systemChat 'Entered Combat'";
		
		class RequestReinforcement  {
			targetState = "RequestReinforcement";
			// can call reinforcement every 60 seconds
			condition = "time - (_this getVariable ['dsm_reinforcement_called', 0]) > 60";
		}
		class NoContacs {
			targetState = "Initial";
			condition = "!(_this call dsm_fnc_inContact)";
		}
	}

	class RequestReinforcement {
		onStateEntered = "dsm_fnc_requestReinforcement"
		class Done {
			targetState = "Combat"
			condition = "true"
		}
	}
};

class SPO_GarrisonStateMachine {
	list = "dsm_garrison_groups";
	skipNull = 1;

	class Garrisoned {
		class Activate {
			targetState = "Activated";
			condition = "dsm_fnc_nearGarrison";
		};
	};

	class Activated {
		onStateEntered = "dsm_fnc_onGarrisonActivated"
	}
}