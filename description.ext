tmf_version[] = {1,0,1}; // DO NOT CHANGE THIS. This is the core version of the template that your mission was started with.
enableDebugConsole = 1; // Allows the logged in admin to use the debug console from the escape page.

// Use a randomized loading image from TMF. Set your own loading image with e.g. overviewPicture = "image.jpg";
overviewPicture = "";

class CfgDebriefingSections {
    class acex_killTracker {
        title = "ACEX Kill Tracker";
        variable = "acex_killTracker_outputText";
    };
};

class CfgDebriefing
{
	class END1
	{
		title = "Mission Completed";
		subtitle = "ALL AI ELIMINATED";
		description = "Good job!";
	};
	class Failed
	{
		title = "Mission Failed";
		subtitle = "";
		description = "";
	};
	class CustomEnding1
	{
		title = "Custom Ending #1";
		subtitle = "";
		description = "*** Explanation for the debriefing page ***";
	};
};

class Extended_PreInit_EventHandlers {
    class spo {
        init = "call compile preprocessFileLineNumbers 'XEH_preInit.sqf';";
    };
};
#include "ui_macros.hpp"

class CfgFunctions
{
	class spo /*dynamic squad mission*/
	{
		class general
		{
			file = "functions";
			class gear {};
			class createGarrison {};
			class missionSettingsDialog {};
			class setup {};
			class getReinforcementLocations {};
			class getViableFactions {};
			class createSquad {};
			class createReinforcements {};
			class createGuardPoint{};
			class patrol{};
			class createVehicle{};
		};
		class patrol {
			file = "statemachines\patrol";
			class onReinforceing{};
			class requestReinforcement{};
			class createPatrol{};
		}
		class garrison {
			file = "statemachines\garrison";
			class shouldActivateGarrison{};
			class onGarrisonActivated{};
		}
		class AI {
			file = "functions\ai";
			class hunt{};
		}
		class helpers {
			file = "functions\helpers";
			class nearBuildings{};
			class setObjective{};
			class reveal{};
			class inContact{};
			class createFlare{};
		}
		class sad {
			file = "missions\sad";
			class onSadStart{};
			class onSadEnd{};
		}
		class secure {
			file = "missions\secure";
			class onSecureStart{};
			class onSecureArrived{};
			class onSecureWin{};
		}
		class vehicles {
			file = "functions\vehicles";
			class getCombatVehicle{};
			class getTransportVehicle{};
		}
	};
};

class Params {
};
#include "ui\missionDialog.hpp"
#include "statemachines\garrison\garrison.hpp"
#include "statemachines\patrol\patrol.hpp"

class SPO_Missions {
	#include "missions\sad\machine.hpp"
	#include "missions\secure\machine.hpp"
}